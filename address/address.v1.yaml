openapi: 3.0.0
info:
  title: address.v1
  version: '1.0'
  contact:
    name: Conomy
    url: conomyhq.com
    email: hola@conomyhq.com
  termsOfService: conomyhq.com
  description: 'Create, update and delete address'
servers:
  - url: 'http://localhost:3000'
paths:
  '/address/{userid}':
    parameters:
      - schema:
          type: string
        name: userid
        in: path
        required: true
    get:
      summary: Get Address by User ID
      tags:
        - address
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Address'
              examples: {}
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-address-userid
      description: Retrieve all address with the matching user ID.
  /address:
    post:
      summary: Create New Address
      operationId: post-address
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
        '500':
          description: Internal error
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                address:
                  $ref: ./users.v1.yaml#/components/schemas/Address
              required:
                - address
            examples: {}
        description: Possible to create an address with any address model field
      description: Create a new address.
      tags:
        - address
    parameters: []
  '/address/{addressid}':
    parameters:
      - schema:
          type: string
        name: addressid
        in: path
        required: true
    get:
      summary: Get Address by Address ID
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      operationId: get-address-addressid
      description: Get card with the matching Address ID.
    patch:
      summary: ''
      operationId: patch-address-addressid
      responses:
        '202':
          description: Accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Update the infromation of an existing address.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Address'
        description: Address Model
    delete:
      summary: ''
      operationId: delete-address-addressid
      responses:
        '204':
          description: No Content
        '400':
          description: Bad Request
        '404':
          description: Not Found
        '500':
          description: Internal Server Error
      description: Delete address with matching by Address ID
components:
  schemas:
    Address:
      title: Address
      type: object
      description: Address Model
      x-examples: {}
      properties:
        country:
          type: string
          description: Unique identifier for the given user.
        region:
          type: string
        commune:
          type: string
        city:
          type: string
          format: email
        province:
          type: string
          format: date
          example: '1997-10-31'
        firstLine:
          type: string
          description: Set to true if the user's email has been verified.
        secondline:
          type: string
          format: date
          description: The date that the user was created.
        zipCode:
          type: string
        addressId:
          type: string
        userId:
          type: string
        type:
          type: string
tags:
  - name: address
